/*
정렬 : 값을 순서대로 표현하는 것을 말함
	-오름차순 : 값이 작은것 부터 먼저 오게 함
	-내림차순 : 값이 큰것 부터 먼저 오게 함

int []data ={5,2,3,9,1};
만약 위와 같이 배열의 요소가 5개로 구성되어있다면 오름차순 정렬이 된 후에는 다음과 같아야 한다
{1.2.3.5.9}

정렬하기 위해서는 배열의 각 자리에 와야할 값을 차례로 찾아야 함
위와 같이 배열의 원소가 5개라면 0번째 자리에서는 5개 중에 가장 작은 값을 찾아 놓아야 함
0번째 자리의 값을 찾기 위해서는 1번째부터 차례대로 0번째의 값과 비교하여 비교하는 값이 0번째의
값보다 더 작으면 서로 맞바꾸어야 함
즉 0번째 와야할 값을 찾기 위해서는 1번째부터 모든 배열의 원소를 비교하여 찾아야 함
0번째 와야할 값을 찾았다면 그 다음 1번째 와야할 값을 찾는다
1번째 와야할 값을 찾기 위해서는 이미 자리를 잡은 0번째와는 비교할 필요 없음
2번째부터 모든 배열의 원소를 1번째와 비교하여 비교하는 값이 1번째의 값보다 더 작다면 
서로 맞바꾸어 줌
즉, 정렬할 때에 중첩 반복문을 써야하며 i번째 와야할 값을 찾을때 비교하는 j는 i+1 부터 배열의 길이만큼 모두 비교하여
크기가 맞지 않으면 i번째 원소와 j번째 원소를 서로 맞바꾸어 줌

*/


class SortArray 
{
	public static void main(String[] args) 
	{
		int []data = {5,2,3,9,1};
		//오름차순 정렬 : 1,2,3,5,9
		
	for(int i = 0 ; i<data.length ; i++){
	 for(int j = i+1 ; j<data.length ; j++){
			 if(data[i] > data[j]){
				int temp = data[i]; //데이타를 바꾸는 변수
				data[i] = data[j];
				data[j] = temp;
			 }
		}
	}
	System.out.println("오름차순 정렬 결과");
		for(int i=0;i<data.length;i++){
			System.out.print(data[i]+ " ");
		}

	
	
	}
}
